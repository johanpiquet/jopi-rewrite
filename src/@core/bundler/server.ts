import {type WebSite, WebSiteImpl} from "../jopiWebSite.js";
import {getVirtualUrlMap, type VirtualUrlEntry} from "jopi-rewrite/loader-tools";

/**
 * Server the /_bundle and /_bundle_s directories.
 * /_bundle/**: files generated by esbuild.
 * /_bundle_s/**: virtual url pointing to the bundle resources.
 */
export function installBundleServer(webSite: WebSite) {
    const virtualRoutes = getVirtualUrlMap();

    webSite.onGET("/_bundle/**", async (req) => {
        req.urlInfos.pathname = req.urlInfos.pathname.substring("/_bundle".length);
        return req.serverFromDir(gDirToServe!);
    });

    // Serve /_bundle_s/** resources.
    //
    // It's url pointing to the transformed url generated by the bundler.
    // This url comes from jopi-loader when processing the initial import.
    // The difficult here is that the import is done before the bundling step,
    // and it's why we don't know the final url before time.
    //
    virtualRoutes.forEach(e => addVirtualUrl(webSite, e));
}

function addVirtualUrl(webSite: WebSite, entry: VirtualUrlEntry) {
    webSite.onGET(entry.route, async req => {
        if (entry.bundleFile) {
            return req.returnFile(entry.bundleFile);
        }

        return req.returnFile(entry.sourceFile);
    });
}

export function configureServer(dirPath: string) {
    gDirToServe = dirPath;
}

let gDirToServe: string|undefined;