import {addVirtualUrlEntry, type VirtualUrlEntry} from "jopi-rewrite/loader-tools";
import * as ns_events from "jopi-toolkit/ns_events";

/**
 * Add a CSS file which must be bundled with the page.
 */
export function addExtraCssToBundle(cssFilePath: string) {
    gHasManuallyIncludedCss = true;
    if (gAllCssFiles.includes(cssFilePath)) return;
    gAllCssFiles.push(cssFilePath);
}

export function hasExternalCssToBundle() {
    return gHasManuallyIncludedCss;
}

export function getExtraCssToBundle(): string[] {
    return gAllCssFiles;
}

ns_events.addListener<VirtualUrlEntry>("jopi.virtualUrl.added", (v) => {
    if (!v.url) debugger;

    if (v.url && v.url.endsWith(".css") || v.url.endsWith(".scss")) {
        addExtraCssToBundle(v.sourceFile);
    }
});

// @ts-ignore Is called from code generated by jopi-loader.
/*global.jopiAddVirtualUrl = function(virtualUrlEntry: VirtualUrlEntry, isCSS: boolean) {
    if (isCSS) {
        addExtraCssToBundle(virtualUrlEntry.sourceFile);
    }

    addVirtualUrlEntry(virtualUrlEntry);
}*/

let gHasManuallyIncludedCss = false;
const gAllCssFiles: string[] = [];